// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "vlcplaylist.h"

// Dispatch interfaces referenced by this interface
#include "VLCPlaylistItems.h"


/////////////////////////////////////////////////////////////////////////////
// CVLCPlaylist properties

/////////////////////////////////////////////////////////////////////////////
// CVLCPlaylist operations

BOOL CVLCPlaylist::GetIsPlaying()
{
    BOOL result;
    InvokeHelper(0x60020001, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
    return result;
}

long CVLCPlaylist::add(LPCTSTR uri, const VARIANT& name, const VARIANT& options)
{
    long result;
    static BYTE parms[] =
        VTS_BSTR VTS_VARIANT VTS_VARIANT;
    InvokeHelper(0x60020002, DISPATCH_METHOD, VT_I4, (void*)&result, parms,
                 uri, &name, &options);
    return result;
}

void CVLCPlaylist::play()
{
    InvokeHelper(0x60020003, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVLCPlaylist::playItem(long itemId)
{
    static BYTE parms[] =
        VTS_I4;
    InvokeHelper(0x60020004, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
                 itemId);
}

void CVLCPlaylist::togglePause()
{
    InvokeHelper(0x60020005, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVLCPlaylist::stop()
{
    InvokeHelper(0x60020006, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVLCPlaylist::next()
{
    InvokeHelper(0x60020007, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

void CVLCPlaylist::prev()
{
    InvokeHelper(0x60020008, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

CVLCPlaylistItems CVLCPlaylist::GetItems()
{
    LPDISPATCH pDispatch;
    InvokeHelper(0x6002000b, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
    return CVLCPlaylistItems(pDispatch);
}
