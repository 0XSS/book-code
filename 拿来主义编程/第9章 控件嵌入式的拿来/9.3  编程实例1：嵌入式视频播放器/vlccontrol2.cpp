// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "vlccontrol2.h"

// Dispatch interfaces referenced by this interface
#include "vlcaudio.h"
#include "vlcinput.h"
#include "vlclog.h"
#include "vlcplaylist.h"
#include "vlcvideo.h"

/////////////////////////////////////////////////////////////////////////////
// CVLCControl2

IMPLEMENT_DYNCREATE(CVLCControl2, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CVLCControl2 properties

/////////////////////////////////////////////////////////////////////////////
// CVLCControl2 operations

BOOL CVLCControl2::GetAutoLoop()
{
    BOOL result;
    InvokeHelper(0x6c, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetAutoLoop(BOOL bNewValue)
{
    static BYTE parms[] =
        VTS_BOOL;
    InvokeHelper(0x6c, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 bNewValue);
}

BOOL CVLCControl2::GetAutoPlay()
{
    BOOL result;
    InvokeHelper(0x6b, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetAutoPlay(BOOL bNewValue)
{
    static BYTE parms[] =
        VTS_BOOL;
    InvokeHelper(0x6b, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 bNewValue);
}

CString CVLCControl2::GetBaseURL()
{
    CString result;
    InvokeHelper(0x6e, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetBaseURL(LPCTSTR lpszNewValue)
{
    static BYTE parms[] =
        VTS_BSTR;
    InvokeHelper(0x6e, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 lpszNewValue);
}

long CVLCControl2::GetStartTime()
{
    long result;
    InvokeHelper(0x6d, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetStartTime(long nNewValue)
{
    static BYTE parms[] =
        VTS_I4;
    InvokeHelper(0x6d, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 nNewValue);
}

CString CVLCControl2::GetMrl()
{
    CString result;
    InvokeHelper(0x6a, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetMrl(LPCTSTR lpszNewValue)
{
    static BYTE parms[] =
        VTS_BSTR;
    InvokeHelper(0x6a, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 lpszNewValue);
}

BOOL CVLCControl2::GetToolbar()
{
    BOOL result;
    InvokeHelper(0x6f, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetToolbar(BOOL bNewValue)
{
    static BYTE parms[] =
        VTS_BOOL;
    InvokeHelper(0x6f, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 bNewValue);
}

CString CVLCControl2::GetVersionInfo()
{
    CString result;
    InvokeHelper(0x6002000c, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, NULL);
    return result;
}

BOOL CVLCControl2::GetVisible()
{
    BOOL result;
    InvokeHelper(0x64, DISPATCH_PROPERTYGET, VT_BOOL, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetVisible(BOOL bNewValue)
{
    static BYTE parms[] =
        VTS_BOOL;
    InvokeHelper(0x64, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 bNewValue);
}

long CVLCControl2::GetVolume()
{
    long result;
    InvokeHelper(0x69, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetVolume(long nNewValue)
{
    static BYTE parms[] =
        VTS_I4;
    InvokeHelper(0x69, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 nNewValue);
}

unsigned long CVLCControl2::GetBackColor()
{
    unsigned long result;
    InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
    return result;
}

void CVLCControl2::SetBackColor(unsigned long newValue)
{
    static BYTE parms[] =
        VTS_I4;
    InvokeHelper(DISPID_BACKCOLOR, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
                 newValue);
}

CVLCAudio CVLCControl2::GetAudio()
{
    LPDISPATCH pDispatch;
    InvokeHelper(0x60020013, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
    return CVLCAudio(pDispatch);
}

CVLCInput CVLCControl2::GetInput()
{
    LPDISPATCH pDispatch;
    InvokeHelper(0x60020014, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
    return CVLCInput(pDispatch);
}

CVLCLog CVLCControl2::GetLog()
{
    LPDISPATCH pDispatch;
    InvokeHelper(0x60020015, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
    return CVLCLog(pDispatch);
}

CVLCPlaylist CVLCControl2::GetPlaylist()
{
    LPDISPATCH pDispatch;
    InvokeHelper(0x60020016, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
    return CVLCPlaylist(pDispatch);
}

CVLCVideo CVLCControl2::GetVideo()
{
    LPDISPATCH pDispatch;
    InvokeHelper(0x60020017, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
    return CVLCVideo(pDispatch);
}
